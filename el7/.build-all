#!/usr/bin/env bash
export PATH=$PATH:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
TZ='UTC'; export TZ
/sbin/ldconfig >/dev/null 2>&1

umask 022

set -e

cd "$(dirname "$0")"

_output_dir='/tmp/_output/tarpackage'
install -m 0755 -d "${_output_dir}"

bash build-zlib.sh
tar -xf /tmp/zlib-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/zlib-*.el7.x86_64.tar.xz "${_output_dir}"/

if [[ "${1}" == 'nossl' || "${1}" == 'no-ssl' || "${1}" == 'without-ssl' || "${1}" == 'withoutssl' ]]; then
    if [[ -f build-ssl-1.1.1.sh && ! -f build-ssl-1.1.1.sh.bak ]]; then
        mv -f build-ssl-1.1.1.sh build-ssl-1.1.1.sh.bak
    fi
fi
if [[ -f build-ssl-1.1.1.sh ]]; then
    bash build-ssl-1.1.1.sh
    rm -fr /usr/local/openssl-1.1.1
    tar -xf /tmp/openssl-*.el7.x86_64.tar.xz -C /
    bash /usr/local/openssl-1.1.1/.install.txt
    /sbin/ldconfig >/dev/null 2>&1
    sleep 1
    mv -f /tmp/openssl-*.el7.x86_64.tar.xz "${_output_dir}"/
fi
if [[ -f build-ssl-1.1.1.sh.bak && ! -f build-ssl-1.1.1.sh ]]; then
    mv -f build-ssl-1.1.1.sh.bak build-ssl-1.1.1.sh
fi

bash build-libedit.sh
tar -xf /tmp/libedit-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/libedit-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-sqlite.sh
tar -xf /tmp/sqlite-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/sqlite-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-libssh2.sh
tar -xf /tmp/libssh2-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/libssh2-*.el7.x86_64.tar.xz "${_output_dir}"/

bash /opt/gcc/set-static-libstdcxx
bash build-pcre.sh
bash /opt/gcc/set-shared-libstdcxx
tar -xf /tmp/pcre-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/pcre-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-pcre2.sh
tar -xf /tmp/pcre2-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/pcre2-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-lz4.sh
tar -xf /tmp/lz4-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/lz4-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-zstd.sh
tar -xf /tmp/zstd-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/zstd-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-tar.sh
tar -xf /tmp/tar-*.el7.x86_64.tar.xz -C /
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/tar-*.el7.x86_64.tar.xz "${_output_dir}"/

bash build-chrony-in-a-container.sh
/sbin/ldconfig >/dev/null 2>&1
sleep 1
mv -f /tmp/chrony-*.el7.x86_64.tar.xz "${_output_dir}"/

sleep 5
echo
printf '\033[01;32m%s\033[m\n' ' all done'
echo
/sbin/ldconfig >/dev/null 2>&1
exit

